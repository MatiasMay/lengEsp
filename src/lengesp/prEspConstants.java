package lengesp;

/* Generated By:JavaCC: Do not edit this line. prEspConstants.java */

/**
 * Token literal values and constants.
 * Generated by org.javacc.parser.OtherFilesGen#start()
 */
public interface prEspConstants {

  /** End of File. */
  int EOF = 0;
  /** RegularExpression Id. */
  int INICIO = 1;
  /** RegularExpression Id. */
  int FIN = 2;
  /** RegularExpression Id. */
  int LEER = 3;
  /** RegularExpression Id. */
  int IMPRIMIR = 4;
  /** RegularExpression Id. */
  int ENT = 5;
  /** RegularExpression Id. */
  int DEC = 6;
  /** RegularExpression Id. */
  int CAD = 7;
  /** RegularExpression Id. */
  int SUMA = 8;
  /** RegularExpression Id. */
  int RESTA = 9;
  /** RegularExpression Id. */
  int MULT = 10;
  /** RegularExpression Id. */
  int DIV = 11;
  /** RegularExpression Id. */
  int MOD = 12;
  /** RegularExpression Id. */
  int POT = 13;
  /** RegularExpression Id. */
  int RCD = 14;
  /** RegularExpression Id. */
  int ASIG = 15;
  /** RegularExpression Id. */
  int AENT = 16;
  /** RegularExpression Id. */
  int ADEC = 17;
  /** RegularExpression Id. */
  int ACAD = 18;
  /** RegularExpression Id. */
  int COMA = 19;
  /** RegularExpression Id. */
  int PYC = 20;
  /** RegularExpression Id. */
  int P1 = 21;
  /** RegularExpression Id. */
  int P2 = 22;
  /** RegularExpression Id. */
  int C1 = 23;
  /** RegularExpression Id. */
  int C2 = 24;
  /** RegularExpression Id. */
  int B1 = 25;
  /** RegularExpression Id. */
  int B2 = 26;
  /** RegularExpression Id. */
  int IF = 27;
  /** RegularExpression Id. */
  int ELIF = 28;
  /** RegularExpression Id. */
  int ELSE = 29;
  /** RegularExpression Id. */
  int FOR = 30;
  /** RegularExpression Id. */
  int WHILE = 31;
  /** RegularExpression Id. */
  int DIG = 32;
  /** RegularExpression Id. */
  int LET = 33;
  /** RegularExpression Id. */
  int VAR = 34;
  /** RegularExpression Id. */
  int ENTERO = 35;
  /** RegularExpression Id. */
  int DECIMAL = 36;
  /** RegularExpression Id. */
  int LESST = 37;
  /** RegularExpression Id. */
  int MORET = 38;
  /** RegularExpression Id. */
  int EQT = 39;
  /** RegularExpression Id. */
  int LESSEQT = 40;
  /** RegularExpression Id. */
  int MOREEQT = 41;
  /** RegularExpression Id. */
  int DIF = 42;
  /** RegularExpression Id. */
  int AND = 43;
  /** RegularExpression Id. */
  int OR = 44;
  /** RegularExpression Id. */
  int NOT = 45;
  /** RegularExpression Id. */
  int CADENA = 46;
  /** RegularExpression Id. */
  int COMM1 = 51;
  /** RegularExpression Id. */
  int COMM2 = 52;
  /** RegularExpression Id. */
  int FIN_COMM2 = 54;

  /** Lexical state. */
  int DEFAULT = 0;
  /** Lexical state. */
  int DENTRO_DEL_COMENTARIO = 1;

  /** Literal token values. */
  String[] tokenImage = {
    "<EOF>",
    "\"inicio\"",
    "\"fin\"",
    "\"leer\"",
    "\"imprimir\"",
    "\"ent\"",
    "\"dec\"",
    "\"cadena\"",
    "\"+\"",
    "\"-\"",
    "\"*\"",
    "\"/\"",
    "\"%\"",
    "\"**\"",
    "\"raiz\"",
    "\"=\"",
    "\"aEnt\"",
    "\"aDec\"",
    "\"aCadena\"",
    "\",\"",
    "\";\"",
    "\"(\"",
    "\")\"",
    "\"{\"",
    "\"}\"",
    "\"[\"",
    "\"]\"",
    "\"si\"",
    "\"sino\"",
    "\"deotro\"",
    "\"por\"",
    "\"mientras\"",
    "<DIG>",
    "<LET>",
    "<VAR>",
    "<ENTERO>",
    "<DECIMAL>",
    "\"<\"",
    "\">\"",
    "\"==\"",
    "\"<=\"",
    "\">=\"",
    "\"<>\"",
    "\"&&\"",
    "\"||\"",
    "\"!\"",
    "<CADENA>",
    "\" \"",
    "\"\\n\"",
    "\"\\r\"",
    "\"\\t\"",
    "<COMM1>",
    "\"/*\"",
    "<token of kind 53>",
    "\"*/\"",
  };

}
